# Generated by Django 5.2.3 on 2025-06-26 08:38

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Friendly name for the device', max_length=100)),
                ('ip_address', models.GenericIPAddressField(help_text='IPv4 address of the device', unique=True, validators=[django.core.validators.validate_ipv4_address])),
                ('description', models.TextField(blank=True, help_text='Optional description')),
                ('device_type', models.CharField(choices=[('server', 'Server'), ('router', 'Router'), ('switch', 'Switch'), ('firewall', 'Firewall'), ('printer', 'Printer'), ('workstation', 'Workstation'), ('dns_server', 'DNS Server'), ('web_server', 'Web Server'), ('database', 'Database'), ('load_balancer', 'Load Balancer'), ('other', 'Other')], default='server', help_text='Type of device', max_length=20)),
                ('location', models.CharField(blank=True, help_text='Physical or logical location', max_length=100)),
                ('ping_enabled', models.BooleanField(default=True, help_text='Enable ping monitoring')),
                ('ping_interval', models.PositiveIntegerField(default=60, help_text='Ping interval in seconds (30-3600)', validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(3600)])),
                ('ping_timeout', models.PositiveIntegerField(default=5, help_text='Ping timeout in seconds (1-30)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('speed_test_enabled', models.BooleanField(default=False, help_text='Enable speed testing')),
                ('speed_test_interval', models.PositiveIntegerField(default=3600, help_text='Speed test interval in seconds (300-86400)', validators=[django.core.validators.MinValueValidator(300), django.core.validators.MaxValueValidator(86400)])),
                ('alert_enabled', models.BooleanField(default=True, help_text='Enable alerts for this device')),
                ('alert_threshold_latency', models.FloatField(default=1000.0, help_text='Alert threshold for latency in milliseconds', validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(10000.0)])),
                ('alert_threshold_packet_loss', models.FloatField(default=10.0, help_text='Alert threshold for packet loss percentage', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('warning', 'Warning'), ('unknown', 'Unknown')], default='unknown', help_text='Current device status', max_length=10)),
                ('last_seen', models.DateTimeField(blank=True, help_text='Last time device was reachable', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether monitoring is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['status'], name='devices_dev_status_bbf58f_idx'), models.Index(fields=['is_active'], name='devices_dev_is_acti_52b321_idx'), models.Index(fields=['device_type'], name='devices_dev_device__0d8d82_idx')],
            },
        ),
        migrations.CreateModel(
            name='DeviceCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=100)),
                ('password', models.CharField(blank=True, max_length=255)),
                ('ssh_key', models.TextField(blank=True, help_text='SSH private key for authentication')),
                ('snmp_community', models.CharField(blank=True, default='public', max_length=100)),
                ('snmp_version', models.CharField(choices=[('v1', 'v1'), ('v2c', 'v2c'), ('v3', 'v3')], default='v2c', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='credentials', to='devices.device')),
            ],
            options={
                'verbose_name': 'Device Credential',
                'verbose_name_plural': 'Device Credentials',
            },
        ),
        migrations.CreateModel(
            name='DeviceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code for group visualization', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('devices', models.ManyToManyField(blank=True, related_name='groups', to='devices.device')),
            ],
            options={
                'verbose_name': 'Device Group',
                'verbose_name_plural': 'Device Groups',
                'ordering': ['name'],
            },
        ),
    ]
