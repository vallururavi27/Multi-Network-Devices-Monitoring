# Generated by Django 5.2.3 on 2025-06-26 08:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('devices', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_devices', models.PositiveIntegerField(default=0)),
                ('online_devices', models.PositiveIntegerField(default=0)),
                ('offline_devices', models.PositiveIntegerField(default=0)),
                ('warning_devices', models.PositiveIntegerField(default=0)),
                ('total_pings_today', models.PositiveIntegerField(default=0)),
                ('successful_pings_today', models.PositiveIntegerField(default=0)),
                ('total_speed_tests_today', models.PositiveIntegerField(default=0)),
                ('successful_speed_tests_today', models.PositiveIntegerField(default=0)),
                ('avg_response_time', models.FloatField(blank=True, null=True)),
                ('avg_download_speed', models.FloatField(blank=True, null=True)),
                ('avg_upload_speed', models.FloatField(blank=True, null=True)),
                ('monitoring_active', models.BooleanField(default=True)),
                ('last_monitoring_run', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField(auto_now_add=True, unique=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'System Metrics',
                'verbose_name_plural': 'System Metrics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='MonitoringSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Session name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Session description')),
                ('ping_interval', models.PositiveIntegerField(default=60, help_text='Ping interval in seconds')),
                ('speed_test_interval', models.PositiveIntegerField(default=3600, help_text='Speed test interval in seconds')),
                ('is_active', models.BooleanField(default=False, help_text='Whether the session is active')),
                ('started_at', models.DateTimeField(blank=True, help_text='When the session started', null=True)),
                ('stopped_at', models.DateTimeField(blank=True, help_text='When the session stopped', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created the session', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('devices', models.ManyToManyField(related_name='monitoring_sessions', to='devices.device')),
            ],
            options={
                'verbose_name': 'Monitoring Session',
                'verbose_name_plural': 'Monitoring Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PingResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_reachable', models.BooleanField(help_text='Whether the device responded to ping')),
                ('response_time', models.FloatField(blank=True, help_text='Response time in milliseconds', null=True)),
                ('packet_loss', models.FloatField(default=0.0, help_text='Packet loss percentage')),
                ('packets_sent', models.PositiveIntegerField(default=4, help_text='Number of packets sent')),
                ('packets_received', models.PositiveIntegerField(default=0, help_text='Number of packets received')),
                ('min_time', models.FloatField(blank=True, help_text='Minimum response time', null=True)),
                ('max_time', models.FloatField(blank=True, help_text='Maximum response time', null=True)),
                ('avg_time', models.FloatField(blank=True, help_text='Average response time', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if ping failed')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ping_results', to='devices.device')),
            ],
            options={
                'verbose_name': 'Ping Result',
                'verbose_name_plural': 'Ping Results',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['device', '-timestamp'], name='monitoring__device__5cb643_idx'), models.Index(fields=['is_reachable', '-timestamp'], name='monitoring__is_reac_34fa1c_idx'), models.Index(fields=['-timestamp'], name='monitoring__timesta_3b6eae_idx')],
            },
        ),
        migrations.CreateModel(
            name='SpeedTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('download_speed', models.FloatField(blank=True, help_text='Download speed in Mbps', null=True)),
                ('upload_speed', models.FloatField(blank=True, help_text='Upload speed in Mbps', null=True)),
                ('ping_latency', models.FloatField(blank=True, help_text='Ping latency in milliseconds', null=True)),
                ('server_name', models.CharField(blank=True, help_text='Speed test server name', max_length=100)),
                ('server_location', models.CharField(blank=True, help_text='Speed test server location', max_length=100)),
                ('server_country', models.CharField(blank=True, help_text='Speed test server country', max_length=50)),
                ('server_sponsor', models.CharField(blank=True, help_text='Speed test server sponsor', max_length=100)),
                ('server_id', models.CharField(blank=True, help_text='Speed test server ID', max_length=20)),
                ('client_ip', models.GenericIPAddressField(blank=True, help_text='Client IP address', null=True)),
                ('client_isp', models.CharField(blank=True, help_text='Client ISP', max_length=100)),
                ('test_duration', models.FloatField(blank=True, help_text='Test duration in seconds', null=True)),
                ('is_successful', models.BooleanField(default=True, help_text='Whether the test completed successfully')),
                ('error_message', models.TextField(blank=True, help_text='Error message if test failed')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speed_results', to='devices.device')),
            ],
            options={
                'verbose_name': 'Speed Test Result',
                'verbose_name_plural': 'Speed Test Results',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['device', '-timestamp'], name='monitoring__device__653362_idx'), models.Index(fields=['is_successful', '-timestamp'], name='monitoring__is_succ_0ac879_idx'), models.Index(fields=['-timestamp'], name='monitoring__timesta_a32b56_idx')],
            },
        ),
    ]
