# Generated by Django 5.2.3 on 2025-06-26 08:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('devices', '0002_device_city_device_country_and_more'),
        ('monitoring', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='speedtestresult',
            name='jitter',
            field=models.FloatField(blank=True, help_text='Jitter in milliseconds', null=True),
        ),
        migrations.AddField(
            model_name='speedtestresult',
            name='packet_loss_percent',
            field=models.FloatField(blank=True, help_text='Packet loss percentage', null=True),
        ),
        migrations.CreateModel(
            name='GeoLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('country_code', models.CharField(blank=True, max_length=2)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('region_code', models.CharField(blank=True, max_length=10)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('isp', models.CharField(blank=True, max_length=200)),
                ('organization', models.CharField(blank=True, max_length=200)),
                ('asn', models.CharField(blank=True, help_text='Autonomous System Number', max_length=50)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Geo Location',
                'verbose_name_plural': 'Geo Locations',
                'indexes': [models.Index(fields=['ip_address'], name='monitoring__ip_addr_c8e3e4_idx'), models.Index(fields=['country'], name='monitoring__country_b8e7dc_idx'), models.Index(fields=['isp'], name='monitoring__isp_e532a1_idx')],
            },
        ),
        migrations.CreateModel(
            name='TracerouteResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hops', models.JSONField(default=list, help_text='List of traceroute hops')),
                ('total_hops', models.PositiveIntegerField(default=0, help_text='Total number of hops')),
                ('destination_reached', models.BooleanField(default=False, help_text='Whether destination was reached')),
                ('total_time', models.FloatField(blank=True, help_text='Total time to reach destination', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if traceroute failed')),
                ('is_successful', models.BooleanField(default=True, help_text='Whether traceroute completed successfully')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traceroute_results', to='devices.device')),
            ],
            options={
                'verbose_name': 'Traceroute Result',
                'verbose_name_plural': 'Traceroute Results',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['device', '-timestamp'], name='monitoring__device__6705ce_idx'), models.Index(fields=['-timestamp'], name='monitoring__timesta_e47f4f_idx')],
            },
        ),
    ]
